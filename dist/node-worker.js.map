{
  "version": 3,
  "sources": ["../src/node-worker.ts"],
  "sourcesContent": ["// Mediocre shim\nlet Worker: typeof import('worker_threads').Worker;\nconst workerAdd = \";var __w=require('worker_threads');__w.parentPort.on('message',function(m){onmessage({data:m})}),postMessage=function(m,t){__w.parentPort.postMessage(m,t)},close=process.exit;self=global\";\n\ntry {\n  Worker = require('worker_threads').Worker;\n} catch(e) {\n}\nexport default Worker ? <T>(c: string, _: number, msg: unknown, transfer: ArrayBuffer[], cb: (err: Error, msg: T) => void) => {\n  let done = false;\n  const w = new Worker(c + workerAdd, { eval: true })\n    .on('error', e => cb(e, null))\n    .on('message', m => cb(null, m))\n    .on('exit', c => {\n      if (c && !done) cb(new Error('exited with code ' + c), null);\n    });\n  w.postMessage(msg, transfer);\n  w.terminate = () => {\n    done = true;\n    return Worker.prototype.terminate.call(w);\n  }\n  return w;\n} : (_: string, __: number, ___: unknown, ____: ArrayBuffer[], cb: (err: Error, msg: null) => void) => {\n  setImmediate(() => cb(new Error('async operations unsupported - update to Node 12+ (or Node 10-11 with the --experimental-worker CLI flag)'), null));\n  const NOP = () => {};\n  return {\n    terminate: NOP,\n    postMessage: NOP\n  } as unknown as import('worker_threads').Worker;\n}"],
  "mappings": ";;AACA,IAAI;AACJ,MAAM,YAAY;AAElB,IAAI;AACF,WAAS,QAAQ,gBAAgB,EAAE;AACrC,SAAQ,GAAG;AACX;AACA,IAAO,sBAAQ,SAAS,CAAI,GAAW,GAAW,KAAc,UAAyB,OAAqC;AAC5H,MAAI,OAAO;AACX,QAAM,IAAI,IAAI,OAAO,IAAI,WAAW,EAAE,MAAM,KAAK,CAAC,EAC/C,GAAG,SAAS,OAAK,GAAG,GAAG,IAAI,CAAC,EAC5B,GAAG,WAAW,OAAK,GAAG,MAAM,CAAC,CAAC,EAC9B,GAAG,QAAQ,CAAAA,OAAK;AACf,QAAIA,MAAK,CAAC,KAAM,IAAG,IAAI,MAAM,sBAAsBA,EAAC,GAAG,IAAI;AAAA,EAC7D,CAAC;AACH,IAAE,YAAY,KAAK,QAAQ;AAC3B,IAAE,YAAY,MAAM;AAClB,WAAO;AACP,WAAO,OAAO,UAAU,UAAU,KAAK,CAAC;AAAA,EAC1C;AACA,SAAO;AACT,IAAI,CAAC,GAAW,IAAY,KAAc,MAAqB,OAAwC;AACrG,eAAa,MAAM,GAAG,IAAI,MAAM,2GAA2G,GAAG,IAAI,CAAC;AACnJ,QAAM,MAAM,6BAAM;AAAA,EAAC,GAAP;AACZ,SAAO;AAAA,IACL,WAAW;AAAA,IACX,aAAa;AAAA,EACf;AACF;",
  "names": ["c"]
}
